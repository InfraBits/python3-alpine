on: {push: {branches: [main]}, schedule: [{cron: '13 22 * * *'}], workflow_dispatch: {}}
name: Build
jobs:
  build:
    runs-on: ubuntu-latest
    permissions: {packages: write, contents: write}
    continue-on-error: true
    strategy:
      matrix:
        python-release: ['3.10', '3.11', '3.12']
        archs: ['x86_64,arm64']
    concurrency: 'python3-alpine-${{ matrix.python-release }}-${{ matrix.archs }}'
    outputs:
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - name: Generate version tag
        id: version
        run: |
          echo "tag=$(date +%s)" >> $GITHUB_OUTPUT
      - name: Setup workspace
        run: |
          mkdir -p ${{ github.workspace }}/work
          cp melange-${{ matrix.python-release }}.yaml ${{ github.workspace }}/work/
          cp apko-${{ matrix.python-release }}.yaml ${{ github.workspace }}/work/
      - name: Build package
        run: |
          docker run --privileged -v ${{ github.workspace }}/work:/work ghcr.io/wolfi-dev/melange keygen
          docker run --privileged -v ${{ github.workspace }}/work:/work ghcr.io/wolfi-dev/melange build --signing-key melange.rsa --arch ${{ matrix.archs }} melange-${{ matrix.python-release }}.yaml
      - name: Build container
        run: |
          docker run \
            --entrypoint /bin/sh \
            -i \
            -v ${{ github.workspace }}/work:/work \
            ghcr.io/wolfi-dev/apko \
            -c "$(cat <<"EOF"
            echo '${{ secrets.GITHUB_TOKEN }}' | apko login -u ${{ github.repository_owner }} --password-stdin --password-stdin ghcr.io
            apko publish --debug --keyring-append melange.rsa.pub --repository-append /work/packages --arch ${{ matrix.archs }} apko-${{ matrix.python-release }}.yaml ghcr.io/infrabits/python3-alpine-${{ matrix.python-release }}:latest-${{ steps.version.outputs.tag }}
          EOF
          )"
      - uses: imjasonh/setup-crane@v0.3
      - name: Update latest tag
        run: |
          echo '${{ secrets.GITHUB_TOKEN }}' | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          crane cp ghcr.io/infrabits/python3-alpine-${{ matrix.python-release }}:latest-${{ steps.version.outputs.tag }} ghcr.io/infrabits/python3-alpine-${{ matrix.python-release }}:latest
  tag:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Create GitHub release
        uses: actions/github-script@v6
        with:
          script: |
            const tag = new Date().toISOString().split('T')[0].replaceAll('-', '');
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Release ' + tag,
              tag_name: 'latest-' + tag,
              draft: false,
              prerelease: false,
            })
